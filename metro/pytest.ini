[tool:pytest]
# Pytest configuration for the metro data pipeline project

# Test discovery patterns
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers for categorizing tests
markers =
    unit: Unit tests for individual functions/methods
    integration: Integration tests for complete workflows
    slow: Tests that take longer to run
    spark: Tests that require Spark session
    data_quality: Tests that validate data quality

# Output options
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --disable-warnings
    --cov=scripts
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-fail-under=80

# Minimum Python version
minversion = 3.8

# Test timeout (in seconds)
timeout = 300

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S
